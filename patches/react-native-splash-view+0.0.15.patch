diff --git a/node_modules/react-native-splash-view/ios/generated/RNSplashViewSpec/RNSplashViewSpec-generated.mm b/node_modules/react-native-splash-view/ios/generated/RNSplashViewSpec/RNSplashViewSpec-generated.mm
index 0ed8158..373dc71 100644
--- a/node_modules/react-native-splash-view/ios/generated/RNSplashViewSpec/RNSplashViewSpec-generated.mm
+++ b/node_modules/react-native-splash-view/ios/generated/RNSplashViewSpec/RNSplashViewSpec-generated.mm
@@ -3,44 +3,51 @@
  *
  * Do not edit this file as changes may cause incorrect behavior and will be lost
  * once the code is regenerated.
- *
- * @generated by codegen project: GenerateModuleObjCpp
- *
- * We create an umbrella header (and corresponding implementation) here since
- * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
- * must have a single output. More files => more genrule()s => slower builds.
  */
 
 #import "RNSplashViewSpec.h"
 
-
 @implementation NativeSplashViewSpecBase
 
-
 - (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper
 {
-  _eventEmitterCallback = std::move(eventEmitterCallbackWrapper->_eventEmitterCallback);
+  
+  _eventEmitterCallback = std::move(eventEmitterCallbackWrapper.callback);
 }
-@end
 
+@end
 
 namespace facebook::react {
 
-    static facebook::jsi::Value __hostFunction_NativeSplashViewSpecJSI_showSplash(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
-      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "showSplash", @selector(showSplash), args, count);
-    }
+static facebook::jsi::Value __hostFunction_NativeSplashViewSpecJSI_showSplash(
+    facebook::jsi::Runtime& rt,
+    TurboModule &turboModule,
+    const facebook::jsi::Value* args,
+    size_t count) {
+  return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(
+      rt, VoidKind, "showSplash", @selector(showSplash), args, count);
+}
 
-    static facebook::jsi::Value __hostFunction_NativeSplashViewSpecJSI_hideSplash(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
-      return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(rt, VoidKind, "hideSplash", @selector(hideSplash), args, count);
-    }
+static facebook::jsi::Value __hostFunction_NativeSplashViewSpecJSI_hideSplash(
+    facebook::jsi::Runtime& rt,
+    TurboModule &turboModule,
+    const facebook::jsi::Value* args,
+    size_t count) {
+  return static_cast<ObjCTurboModule&>(turboModule).invokeObjCMethod(
+      rt, VoidKind, "hideSplash", @selector(hideSplash), args, count);
+}
 
-  NativeSplashViewSpecJSI::NativeSplashViewSpecJSI(const ObjCTurboModule::InitParams &params)
+NativeSplashViewSpecJSI::NativeSplashViewSpecJSI(const ObjCTurboModule::InitParams &params)
     : ObjCTurboModule(params) {
 
-        methodMap_["showSplash"] = MethodMetadata {0, __hostFunction_NativeSplashViewSpecJSI_showSplash};
+  methodMap_["showSplash"] = MethodMetadata {
+    0, __hostFunction_NativeSplashViewSpecJSI_showSplash
+  };
 
+  methodMap_["hideSplash"] = MethodMetadata {
+    0, __hostFunction_NativeSplashViewSpecJSI_hideSplash
+  };
 
-        methodMap_["hideSplash"] = MethodMetadata {0, __hostFunction_NativeSplashViewSpecJSI_hideSplash};
+}
 
-  }
 } // namespace facebook::react
diff --git a/node_modules/react-native-splash-view/ios/generated/RNSplashViewSpec/RNSplashViewSpec.h b/node_modules/react-native-splash-view/ios/generated/RNSplashViewSpec/RNSplashViewSpec.h
index 51c75ec..741cd62 100644
--- a/node_modules/react-native-splash-view/ios/generated/RNSplashViewSpec/RNSplashViewSpec.h
+++ b/node_modules/react-native-splash-view/ios/generated/RNSplashViewSpec/RNSplashViewSpec.h
@@ -5,17 +5,12 @@
  * once the code is regenerated.
  *
  * @generated by codegen project: GenerateModuleObjCpp
- *
- * We create an umbrella header (and corresponding implementation) here since
- * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
- * must have a single output. More files => more genrule()s => slower builds.
  */
 
 #ifndef __cplusplus
 #error This file must be compiled as Obj-C++. If you are importing it, you must change your file extension to .mm.
 #endif
 
-// Avoid multiple includes of RNSplashViewSpec symbols
 #ifndef RNSplashViewSpec_H
 #define RNSplashViewSpec_H
 
@@ -31,8 +26,15 @@
 #import <vector>
 
 
+#import <functional>
+#import <jsi/jsi.h>
+
 NS_ASSUME_NONNULL_BEGIN
 
+@interface EventEmitterCallbackWrapper : NSObject
+@property(nonatomic, assign) std::function<void(const facebook::jsi::Value &)> callback;
+@end
+
 @protocol NativeSplashViewSpec <RCTBridgeModule, RCTTurboModule>
 
 - (void)showSplash;
@@ -42,11 +44,12 @@ NS_ASSUME_NONNULL_BEGIN
 
 @interface NativeSplashViewSpecBase : NSObject {
 @protected
-facebook::react::EventEmitterCallback _eventEmitterCallback;
+    std::function<void(const facebook::jsi::Value &)> _eventEmitterCallback;
 }
-- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper;
 
 
+- (void)setEventEmitterCallback:(EventEmitterCallbackWrapper *)eventEmitterCallbackWrapper;
+
 @end
 
 namespace facebook::react {
